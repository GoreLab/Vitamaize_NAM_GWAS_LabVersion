rm(list = ls())

###Required files:
### (1) Tabular summary file for JL - containing JL/ GWAS/ common SI info from scripts 4-1, 4-2, 4-3 but most important criteria - CHR is [,2], QTL_PEAK_POS is [,3], and input file is DEVOID OF SPACES
### (2) Recombination_Suppression_1106_Markers_AGPv2.txt file, containing genetic distance per megabase for region marker by 1106 original SNP markers
### (3) Centromere_Positions_20140702_Reformatted_for_R_AGPv2.txt, containing centromere positions in AGPv2 (conversion made 6/3/2015)

######Output:
### (1) File will append matrix of recombination suppression percentiles and pericentromere region descriptors to above JL results

###################Function that will find the cM/Mb estimate of the nearest marker in the 1,106 marker set
get.me.my.recomb.info <- function(){
  #Obtain only the markers that are on the chromsome of interest
  the.markers.of.interest <- the.recomb.supp.info[which(the.recomb.supp.info[,1] == chr),]
  
  #Obtain the absolute value of the distance between the marker of interest and all other markers on
  # the tested chromosome
  abs.distance.to.QTL.peak.pos <- abs(the.markers.of.interest[,4]-QTL.peak.pos)
  
  #Identify the nearest marker; this will be the one that has the minimum absoute distance to the 
  # tested marker
  index.of.nearest.marker <- which(abs.distance.to.QTL.peak.pos==min(abs.distance.to.QTL.peak.pos))
  
  #In the rare case that two of the 1,106 markers are equidistant to the tested QTL peak position, pick the first one
  # (this is an arbitrary choice, but I do not see any flaws with doing this)
  if(length(index.of.nearest.marker > 1)) index.of.nearest.marker <- index.of.nearest.marker[1]
  
  #Obtain the name of the nearest marker
  name.of.nearest.marker <- the.markers.of.interest[index.of.nearest.marker,3]
  
  #Obtain cM/Mb of nearest marker in 1,106 marker set
  cMMb.of.nearest.marker <- the.markers.of.interest[index.of.nearest.marker,5]
  
  #Also obtain the corresponding percentile
  recom.supp.percentile.of.nearest.marker <- the.markers.of.interest[index.of.nearest.marker,7]
  
  #Return the results
  return(list(name = name.of.nearest.marker, cMMb = cMMb.of.nearest.marker, percentile = recom.supp.percentile.of.nearest.marker))
}#end  get.me.my.recomb.info() 
#######End function that will find the cM/Mb estimate of the nearest marker in the 1,106 marker set

############################################
#Function to determine if a given peak QTL position is in a pericentromeric region
in.pericentromeric.region.or.not <- function(){
  #Obtain the postions of the pericentromeric region fr that chromosome
  pericentromeric.left <- AGPv1.pericentromeric.regions[which(AGPv1.pericentromeric.regions == chr),2]
  pericentromeric.right <- AGPv1.pericentromeric.regions[which(AGPv1.pericentromeric.regions == chr),3]  
  
  
  #If the peak QTL position is in the pericentromeric region, return "In pericentromeric region"
  if((QTL.peak.pos > pericentromeric.left)&(QTL.peak.pos < pericentromeric.right)){
    return.statement <- "In_pericentromeric_region"
  }else{
    return.statement <- "Not_in_pericentromeric_region"
  }#end if((QTL.peak.pos > pericentromeric.left)&(QTL.peak.pos < pericentromeric.right))
  
  return(return.statement)
}#end in.pericentromeric.region.or.not()
#########################################


#############################################################################################
#############################################################################################
#############################################################################################

#Set working directory
setwd("C:\\Users\\ceb19\\Documents\\Gore Lab\\Carotenoid NAM Merged Env\\(31) Tabular Summary Info for 2015 analysis\\Recombination Suppressed Regions\\")

#Read in the JL QTL information, which is an abbreviated version of Supplemental Table 2
the.JL.results <- read.table("Tab_Sum_Carot_alpha.01_SI_with_GWAS_SNPs_common_SI_20150511_no_spaces.txt",head = TRUE)

#Read in information about recombination suppression
the.recomb.supp.info <- read.table("Recombination_Suppression_1106_Markers_AGPv2.txt",head = TRUE)

#Read in the AGPv1 pericentromeric regions
AGPv1.pericentromeric.regions <- read.table("Centromere_Positions_20140702_Reformatted_for_R_AGPv2.txt",head = TRUE)

#For loop through each QTL
cMMb <- NULL
percentile <- NULL
in.recomb.supp <- NULL
for(i in 1:nrow(the.JL.results)){
  chr <- the.JL.results[i,2]
  QTL.peak.pos <- the.JL.results[i,3]
  
  #Obtain the cM/Mb estimate of the nearest marker in the 1,106 marker set
  recomb.info <- get.me.my.recomb.info()
  
  #Using AGPv1 coordinates, determine if the JL QTL is in a pericentromeric region
  location <- in.pericentromeric.region.or.not()
  
  #Temporary code
  the.length <- length(recomb.info$name)
  if(the.length > 1){
    print(paste("The ", i,"th row has more than one peak marker", sep = ""))
    break
  }
  #End temporary code
  
  
  #Store this information into three vectors
  cMMb <- c(cMMb, recomb.info$cMMb)
  percentile <- c(percentile, recomb.info$percentile)
  in.recomb.supp <- c(in.recomb.supp, location)
}#End for(i in 1:nrow(the.JL.results))

#cbind both vectors to the original file read in
the.JL.results <- cbind(the.JL.results, cMMb, percentile, in.recomb.supp)

#Output the appended Supplemental Table 2 file.
write.table(the.JL.results, "Tab_Sum_Carot_alpha.01_SI_with_GWAS_SNPs_common_SI_20150511_recsuppregions.txt", sep = "\t", 
            row.names = FALSE,col.names = TRUE,quote = FALSE)



#using input JL file with common support intervals and GWAS information










