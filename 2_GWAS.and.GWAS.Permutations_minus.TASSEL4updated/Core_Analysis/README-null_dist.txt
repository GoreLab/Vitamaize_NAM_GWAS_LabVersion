This package consists of scripts and data structures to generate null distribution of residuals via permutations using a local copy of Tassel.
Created: 2015-03-30
By: Dan Ilut (dci1@cornell.edu)


PACKAGE STRUCTURE:

Files:
  ./null_dist.sh - link to the script that runs the analysis

Directories:
  ./data_input - default directory for the input data
  ./analysis_output - default output directory
  ./code - the code needed to run the analysis, including the default location for tassel


HOW TO USE:

Run with default parameters:
./null_dist.sh -t my_trait_name -r path_to_residuals_file

Use built-in help:
./null_dist.sh -h 

By default inputs are expected in 'data_input'
By default outputs are written to 'analysis_output' with a sub-folder for each trait. 
  If a sub-folder already exists for that trait, a new one will be created by appending the unix time to the name of the trait in order to avoid overwriting previous files
  In the trait sub-folder, for each permutations, 3 files are produced: 
    - a model file 
    - a steps file
    - a log file (all the console output generated by java while running tassel)
  In the trait sub-folder, for each chromosome, a combined file of model results if created: ${trait}_model_chr${chr}_${max_perm}perm_results.txt

The default settings can be found (and edited) in the file 'nulldist.cfg' in the 'code' sub-directory.
The following variables can be specified at runtime via the command line (run `./null_dist.sh -h` to see default values):

REQUIRED:
-t   Name of trait to be analyzed
-r   File containing the residuals for this analysis

OPTIONAL:
-i   Directory containing the input file for this analysis
-o   Output directory; outputs will be saved here in a sub-directory based on trait name
-n   Number of permutations to run
-c   Total number of chromosomes to process; chromosomes are processed sequentially in increasing numeric order
-s   Starting chromosome
-m   Map resolution to use in centimorgans)
-x   Directory where the tassel libraries and .jar file are located
-p   Number of concurrent spawned jobs per processor
-a   Maximum ram (Gb) available to any child process



